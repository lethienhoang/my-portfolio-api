basePath: /api/v1
definitions:
  models.CertificateEntity:
    properties:
      authority:
        type: string
      createdAt:
        type: string
      id:
        type: string
      issueDate:
        type: string
      name:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  models.EducationEntity:
    properties:
      createdAt:
        type: string
      degree:
        type: string
      endDate:
        type: string
      fieldOfStudy:
        type: string
      grade:
        type: string
      id:
        type: string
      name:
        type: string
      startDate:
        type: string
      updatedAt:
        type: string
    type: object
  models.ProfileEntity:
    properties:
      createdAt:
        type: string
      description:
        type: string
      email:
        type: string
      fullName:
        type: string
      gender:
        type: string
      id:
        type: string
      imgURL:
        type: string
      level:
        type: string
      updatedAt:
        type: string
    type: object
  models.SkillEntity:
    properties:
      createdAt:
        type: string
      experiences:
        type: number
      id:
        type: string
      level:
        type: integer
      manufacturer:
        type: string
      name:
        type: string
      type:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8888
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /certificates:
    get:
      consumes:
      - application/json
      description: get certificates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.CertificateEntity'
              type: array
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Show a account
    post:
      consumes:
      - application/json
      description: get certificates
      parameters:
      - description: Certificate
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.CertificateEntity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CertificateEntity'
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Show a account
  /certificates/{:id}:
    put:
      consumes:
      - application/json
      description: get certificates
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Certificate
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.CertificateEntity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CertificateEntity'
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Show a account
  /educations:
    get:
      consumes:
      - application/json
      description: get educations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.EducationEntity'
              type: array
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
    post:
      consumes:
      - application/json
      description: get educations
      parameters:
      - description: Education
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.EducationEntity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EducationEntity'
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
  /educations/{:id}:
    put:
      consumes:
      - application/json
      description: get educations
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Education
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.EducationEntity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EducationEntity'
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
  /profile:
    get:
      consumes:
      - application/json
      description: get my profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProfileEntity'
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
    post:
      consumes:
      - application/json
      description: get my profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProfileEntity'
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
  /profile/{:id}:
    put:
      consumes:
      - application/json
      description: get my profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProfileEntity'
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
  /skills:
    get:
      consumes:
      - application/json
      description: get all skills
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SkillEntity'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
    post:
      consumes:
      - application/json
      description: insertl skill to database
      parameters:
      - description: Skill
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.SkillEntity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SkillEntity'
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
  /skills/{:id}:
    put:
      consumes:
      - application/json
      description: get all skills by manufacturer
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Skill
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.SkillEntity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SkillEntity'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
  /skills/{manufacturer}:
    get:
      consumes:
      - application/json
      description: get all skills by manufacturer
      parameters:
      - description: Manufacturer
        in: path
        name: manufacturer
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SkillEntity'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
  /skills/{type}:
    get:
      consumes:
      - application/json
      description: get all skills by type
      parameters:
      - description: Type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SkillEntity'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
  /skills/bulk:
    put:
      consumes:
      - application/json
      description: insert skills to database
      parameters:
      - description: Skill
        in: body
        name: req
        required: true
        schema:
          items:
            $ref: '#/definitions/models.SkillEntity'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SkillEntity'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
  /users/signin:
    post:
      consumes:
      - application/json
      description: login to system
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
  /users/signout:
    get:
      consumes:
      - application/json
      description: login to system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
  /users/signup:
    post:
      consumes:
      - application/json
      description: login to system
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
  /users/update-password:
    put:
      consumes:
      - application/json
      description: login to system
      parameters:
      - description: UserId
        in: path
        name: id
        required: true
        type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
